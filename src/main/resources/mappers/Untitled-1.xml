<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">

   <resultMap id="resultBoard" type="Board">
      <id property="boardNum" column="BOARD_NUM" />
      <result property="boardWriter" column="BOARD_WRITER" />
      <result property="boardTitle" column="BOARD_TITLE" />
      <result property="boardContent" column="BOARD_CONTENT" />
      <result property="boardOriginalFileName"
         column="BOARD_ORIGINAL_FILENAME" />
      <result property="boardRenameFileName"
         column="BOARD_RENAME_FILENAME" />
      <result property="boardRef" column="BOARD_REF" />
      <result property="boardReplyRef" column="BOARD_REPLY_REF" />
      <result property="boardLev" column="BOARD_LEV" />
      <result property="boardReplySeq" column="BOARD_REPLY_SEQ" />
      <result property="boardReadCount" column="BOARD_READCOUNT" />
      <result property="boardDate" column="BOARD_DATE" />
   </resultMap>

   <select id="selectTop3" resultMap="resultBoard">
      <![CDATA[ 
      select * 
      from (select rownum rnum, board_num, board_title, board_readcount 
      from (select * from board 
      where board_lev = 1 
      order by board_readcount desc)) 
      where rnum <= 3]]>
   </select>

   <select id="getListCount" resultType="_int">
      select count(*) from board
   </select>

   <select id="selectList" parameterType="common.Search"
      resultMap="resultBoard">
   <![CDATA[ 
      select * from (select rownum rnum, board_num, board_writer, board_title, 
      board_content, 
      board_original_filename, board_rename_filename, 
      board_ref, board_reply_ref, 
      board_lev, board_reply_seq, board_readcount, board_date 
      from (select * from board 
      order by board_ref desc, board_reply_ref desc, 
      board_lev asc, board_reply_seq asc)) 
      where rnum >= #{startRow} and rnum <= #{endRow}
   ]]>
   </select>

   <insert id="insertOriginBoard" parameterType="Board">
      insert into board
      values
      ((select max(board_num) + 1 from board), #{boardWriter}, #{boardTitle},
      #{boardContent}, #{boardOriginalFileName}, #{boardRenameFileName},
      (select max(board_num) + 1 from board), null, default,
      default, default, default)
   </insert>

   <update id="addReadCount" parameterType="_int">
      update board
      set board_readcount = board_readcount + 1
      where board_num = #{boardNum}
   </update>

   <select id="selectBoard" parameterType="_int"
      resultMap="resultBoard">
      select * from board where board_num = #{boardNum}
   </select>

   <update id="updateReplySeq" parameterType="Board">
      <if test="boardLev == 2">
         update board set board_reply_seq = board_reply_seq + 1
         where board_ref = #{boardRef} and board_lev = #{boardLev}
      </if>
      <if test="boardLev == 3">
         update board
         set board_reply_seq = board_reply_seq + 1
         where board_ref = #{boardRef} and board_lev = #{boardLev}
         and board_reply_ref = #{boardReplyRef}
      </if>
   </update>
   
   <insert id="insertReply" parameterType="Board">
      <if test="boardLev == 2">
         insert into board values
         ((select max(board_num) + 1 from board), #{boardWriter}, #{boardTitle},
         #{boardContent}, null, null, #{boardRef},
         (select max(board_num) + 1 from board), 2, #{boardReplySeq}, default,
         default)
      </if>
      <if test="boardLev == 3">
         insert into board values
         ((select max(board_num) + 1 from board), #{boardWriter}, #{boardTitle},
         #{boardContent}, null, null, #{boardRef},
         #{boardReplyRef}, 3, #{boardReplySeq}, default, default)
      </if>
   </insert>
   
   <delete id="deleteBoard" parameterType="Board">
      delete from board
      <if test="boardLev == 1">
         where board_ref = #{boardNum}
      </if>
      <if test="boardLev == 2">
         where board_reply_ref = #{boardNum}
      </if>
      <if test="boardLev == 3">
         where board_num = #{boardNum}
      </if>
   </delete>
   
   <update id="updateOriginBoard" parameterType="Board">
      update board
      set board_title = #{boardTitle},
      board_content = #{boardContent},
      board_original_filename = #{boardOriginalFileName},
      board_rename_filename =
      #{boardRenameFileName}
      where board_num = #{boardNum}
   </update>
   <update id="updateReplyBoard" parameterType="Board">
      update board
      set board_title = #{boardTitle},
      board_content = #{boardContent}
      where board_num = #{boardNum}
   </update>
   
   <select id="selectSearchTitle" parameterType="common.Search" resultMap="resultBoard">
   <![CDATA[ 
   select * 
   from (select rownum rnum, board_num, board_writer, board_title, 
   board_content, board_original_filename, board_rename_filename, 
   board_ref, board_reply_ref, 
   board_lev, board_reply_seq, board_readcount, board_date 
   from (select * from board 
   where board_lev = 1 and board_title like '%' || #{keyword} || '%' 
   order by board_ref desc, board_reply_ref desc, 
   board_lev asc, board_reply_seq asc)) 
   where rnum >= #{startRow} and rnum <= #{endRow}
   ]]>
   </select>
   
   <select id="selectSearchWriter" parameterType="common.Search" resultMap="resultBoard">
   <![CDATA[ 
      select * 
      from (select rownum rnum, board_num, board_writer, board_title, 
      board_content, board_original_filename, board_rename_filename, 
      board_ref, board_reply_ref, 
       board_lev, board_reply_seq, board_readcount, board_date 
       from (select * from board 
       where board_lev = 1 and board_writer like '%' || #{keyword} || '%' 
       order by board_ref desc, board_reply_ref desc, 
       board_lev asc, board_reply_seq asc)) 
       where rnum >= #{startRow} and rnum <= #{endRow}
   ]]>
   </select>

   <select id="selectSearchDate" parameterType="common.Search" resultMap="resultBoard">
   <![CDATA[ 
      select * 
      from (select rownum rnum, board_num, board_writer, board_title, 
      board_content, board_original_filename, board_rename_filename, 
      board_ref, board_reply_ref, 
      board_lev, board_reply_seq, board_readcount, board_date 
      from (select * from board 
      where board_lev = 1 and board_date between #{begin} and #{end} 
      order by board_ref desc, board_reply_ref desc, 
      board_lev asc, board_reply_seq asc)) 
      where rnum >= #{startRow} and rnum <= #{endRow}
   ]]>
   </select>
   <select id="getSearchTitleCount" parameterType="string" resultType="_int">
      select count(*) from board where board_lev = 1 and
      board_title like '%' || #{keyword} || '%'
   </select>
   <select id="getSearchWriterCount" parameterType="string" resultType="_int">
      select count(*) from board where board_lev = 1 and
      board_writer like '%' || #{keyword} || '%'
   </select>
   <select id="getSearchDateCount" parameterType="common.Search" resultType="_int">
      select count(*) from board where board_lev = 1 and
      board_date between #{begin} and #{end}
   </select>


</mapper>